/*
 * Copyright (c) 2011-2013 GoPivotal, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
description = 'Reactor Data components'

ext {
  gradleVersion = '1.7'
  gradleScriptDir = "${rootProject.projectDir}/gradle"

  // Languages
  groovyVersion = '2.2.0-beta-2'

  // Logging
  slf4jVersion = '1.7.5'
  logbackVersion = '1.0.13'

  // Spring
  springVersion = '4.0.0.M3'
  sdCommonsVersion = '1.6.1.RELEASE'
  sdMongoVersion = '1.3.1.RELEASE'
  sdCouchbaseVersion = '1.0.0.M1'

  // Reactor
  reactorVersion = '1.0.0.BUILD-SNAPSHOT'

  // Testing
  spockVersion = '0.7-groovy-2.0'
}

apply from: "$gradleScriptDir/setup.gradle"

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  configurations.all {
    exclude group: "commons-logging"
    exclude module: "junit"
  }

  group = 'reactor.data'
  repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-snapshot' }
    maven { url 'http://files.couchbase.com/maven2' }
  }
}

subprojects { subproject ->
  apply plugin: 'java'
  apply plugin: 'groovy'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:none", "-g"]

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task groovydocJar(type: Jar) {
    classifier = 'groovydoc'
    from groovydoc
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  test {
    testLogging {
      events "failed"
      exceptionFormat "full"
    }
  }

  artifacts {
    archives sourcesJar
    archives groovydocJar
    archives javadocJar
  }

  // dependencies that are common across all java projects
  dependencies {
    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"

    // Groovy
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

    // Testing
    testCompile "org.spockframework:spock-core:$spockVersion",
                "org.hamcrest:hamcrest-library:1.3"
    testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
  }
}

project('data-core') {
  description = 'Core Reactor components for working with datastores'
  dependencies {
    compile "org.projectreactor:reactor-core:$reactorVersion"
  }
}

project('data-spring') {
  description = 'Reactor components for working with Spring Data Repositories'
  dependencies {
    compile project(':data-core')

    // Spring
    compile "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-expression:$springVersion",
            "org.springframework:spring-tx:$springVersion"

    // Spring Data
    compile "org.springframework.data:spring-data-commons:$sdCommonsVersion"
    compile("org.springframework.data:spring-data-mongodb:$sdMongoVersion", optional)
    compile("org.springframework.data:spring-data-couchbase:$sdCouchbaseVersion", optional)

    // Reactor
    compile "org.projectreactor:reactor-spring:$reactorVersion"

    // Testing
    testRuntime "org.slf4j:jcl-over-slf4j:$slf4jVersion"
  }
}
